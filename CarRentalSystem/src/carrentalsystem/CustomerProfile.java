/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package carrentalsystem;

import static carrentalsystem.Functions.*;
import static carrentalsystem.LoginDialog.uid;
import java.awt.Color;
import java.io.IOException;
import java.time.YearMonth;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author USER
 */
public class CustomerProfile extends javax.swing.JFrame {
    /**
     * Creates new form NewUserRegister
     */
    private DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm");
    
    public CustomerProfile(){
        initComponents();        
    }
    
    public CustomerProfile(String userID) {
        initComponents();      
        ArrayList<Member> memberList = readTextFile("member");
        ArrayList<MemberPayment> paymentList = readTextFile("payment");
        DateTimeFormatter yearMonthFormatter = DateTimeFormatter.ofPattern("MM/yy");
       
        for(Member m : memberList){
            if(m.getUid().equals(userID)){
                nameInput.setText(m.getName());
                emailInput.setText(m.getEmail());
                pwInput.setText(m.getPw());
                reenterPwInput.setText(m.getPw());
                phoneInput.setText(m.getPhoneNo());
                icNoInput.setText(m.getIcNo());
                addressInput.setText(m.getAddress());
            }          
        }
        
        for(MemberPayment p : paymentList){
            if(p.getUid().equals(userID)){
                cardNoInput.setText(p.getCardNo());
                cvvInput.setText(String.valueOf(p.getCvv()));
                cardExpiryInput.setText(p.getExpiryDate().format(yearMonthFormatter));
            }
        }
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        registerLabel = new javax.swing.JLabel();
        customerDetailsPanel = new javax.swing.JPanel();
        phoneLabel = new javax.swing.JLabel();
        emailInput = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        icNoInput = new javax.swing.JTextField();
        icNoLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressInput = new javax.swing.JTextArea();
        addressLabel = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        pwLabel = new javax.swing.JLabel();
        phoneInput = new javax.swing.JTextField();
        pwErrorMessage = new javax.swing.JLabel();
        pwInput = new javax.swing.JPasswordField();
        reenterPwInput = new javax.swing.JPasswordField();
        reenterPwLabel = new javax.swing.JLabel();
        userDetailsButton = new javax.swing.JButton();
        cancelUpdateUser = new javax.swing.JButton();
        paymentDetailsPanel = new javax.swing.JPanel();
        cardNoLabel = new javax.swing.JLabel();
        cardNoInput = new javax.swing.JTextField();
        cvvLabel = new javax.swing.JLabel();
        cardExpiryInput = new javax.swing.JTextField();
        cardExpiryLabel = new javax.swing.JLabel();
        cvvInput = new javax.swing.JPasswordField();
        cancelUpdatePayment = new javax.swing.JButton();
        paymentButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        registerLabel.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        registerLabel.setText("Profile");

        customerDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "User Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 0, 14))); // NOI18N

        phoneLabel.setText("Phone No:");

        emailInput.setEditable(false);

        emailLabel.setText("Email:");

        icNoInput.setEditable(false);

        icNoLabel.setText("IC No:");

        nameLabel.setText("Name:");

        addressInput.setEditable(false);
        addressInput.setColumns(20);
        addressInput.setRows(5);
        jScrollPane1.setViewportView(addressInput);

        addressLabel.setText("Address: ");

        nameInput.setEditable(false);

        pwLabel.setText("Password:");

        phoneInput.setEditable(false);

        pwErrorMessage.setFont(new java.awt.Font("sansserif", 0, 11)); // NOI18N
        pwErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pwErrorMessage.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        pwErrorMessage.setMaximumSize(new java.awt.Dimension(37, 65));
        pwErrorMessage.setMinimumSize(new java.awt.Dimension(37, 65));
        pwErrorMessage.setPreferredSize(new java.awt.Dimension(37, 65));
        pwErrorMessage.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        pwInput.setEditable(false);
        pwInput.setToolTipText("");

        reenterPwInput.setVisible(false);
        reenterPwInput.setToolTipText("");

        reenterPwLabel.setVisible(false);
        reenterPwLabel.setText("Re-enter:");

        userDetailsButton.setText("Edit");
        userDetailsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userDetailsButtonMouseClicked(evt);
            }
        });

        cancelUpdateUser.setText("Cancel");
        cancelUpdateUser.setVisible(false);
        cancelUpdateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelUpdateUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout customerDetailsPanelLayout = new javax.swing.GroupLayout(customerDetailsPanel);
        customerDetailsPanel.setLayout(customerDetailsPanelLayout);
        customerDetailsPanelLayout.setHorizontalGroup(
            customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerDetailsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customerDetailsPanelLayout.createSequentialGroup()
                        .addGroup(customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(nameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(phoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pwLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(reenterPwLabel))
                        .addGroup(customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pwErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(customerDetailsPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(customerDetailsPanelLayout.createSequentialGroup()
                                        .addGroup(customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(phoneInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                                            .addComponent(pwInput, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(nameInput))
                                        .addGap(153, 153, 153)
                                        .addGroup(customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(emailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(addressLabel))
                                            .addComponent(icNoLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(reenterPwInput, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(icNoInput)
                            .addComponent(emailInput, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(99, 99, 99))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customerDetailsPanelLayout.createSequentialGroup()
                        .addComponent(cancelUpdateUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(userDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        customerDetailsPanelLayout.setVerticalGroup(
            customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerDetailsPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userDetailsButton)
                    .addComponent(cancelUpdateUser))
                .addGap(5, 5, 5)
                .addGroup(customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(customerDetailsPanelLayout.createSequentialGroup()
                        .addGroup(customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameLabel)
                            .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneLabel)
                            .addComponent(phoneInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pwLabel)
                            .addComponent(pwInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(reenterPwLabel)
                            .addComponent(reenterPwInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addComponent(pwErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(customerDetailsPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailLabel))
                        .addGap(18, 18, 18)
                        .addGroup(customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(icNoInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(icNoLabel))
                        .addGap(18, 18, 18)
                        .addGroup(customerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addressLabel))))
                .addContainerGap())
        );

        paymentDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Payment Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 0, 14))); // NOI18N

        cardNoLabel.setText("Card No:");

        cardNoInput.setEditable(false);

        cvvLabel.setText("CVV No:");

        cardExpiryInput.setEditable(false);

        cardExpiryLabel.setText("Expiry Date (mm/yy):");

        cvvInput.setEditable(false);

        cancelUpdatePayment.setText("Cancel");
        cancelUpdatePayment.setVisible(false);
        cancelUpdatePayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelUpdatePaymentActionPerformed(evt);
            }
        });

        paymentButton.setText("Edit");
        paymentButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paymentButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout paymentDetailsPanelLayout = new javax.swing.GroupLayout(paymentDetailsPanel);
        paymentDetailsPanel.setLayout(paymentDetailsPanelLayout);
        paymentDetailsPanelLayout.setHorizontalGroup(
            paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cardNoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cvvLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                        .addComponent(cardNoInput, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(230, 230, 230)
                        .addComponent(cardExpiryLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cardExpiryInput, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cvvInput, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(140, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paymentDetailsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelUpdatePayment)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paymentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        paymentDetailsPanelLayout.setVerticalGroup(
            paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                .addGroup(paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelUpdatePayment)
                    .addComponent(paymentButton))
                .addGap(24, 24, 24)
                .addGroup(paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cardNoLabel)
                    .addComponent(cardNoInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cardExpiryLabel)
                    .addComponent(cardExpiryInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cvvLabel)
                    .addComponent(cvvInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(paymentDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(registerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(160, 160, 160))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(customerDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(157, 157, 157))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(registerLabel)
                .addGap(18, 18, 18)
                .addComponent(customerDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(paymentDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userDetailsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userDetailsButtonMouseClicked
        if(userDetailsButton.getText().equals("Edit")){
            nameInput.setEditable(true);
            emailInput.setEditable(true);
            pwInput.setEditable(true);
            reenterPwLabel.setVisible(true);
            reenterPwInput.setVisible(true);
            phoneInput.setEditable(true);
            icNoInput.setEditable(true);
            addressInput.setEditable(true);
            cancelUpdateUser.setVisible(true);
            userDetailsButton.setText("Update");
        }else{
            if(updateUserDetails()){
                nameInput.setEditable(false);
                emailInput.setEditable(false);
                pwInput.setEditable(false);
                reenterPwLabel.setVisible(false);
                reenterPwInput.setVisible(false);
                phoneInput.setEditable(false);
                icNoInput.setEditable(false);
                addressInput.setEditable(false);
                cancelUpdateUser.setVisible(false);
                userDetailsButton.setText("Edit");            
                showUserDetails();
            }
        }

    }//GEN-LAST:event_userDetailsButtonMouseClicked

    private void paymentButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paymentButtonMouseClicked
        if(paymentButton.getText().equals("Edit")){
            cardNoInput.setEditable(true);
            cvvInput.setEditable(true);
            cardExpiryInput.setEditable(true);
            paymentButton.setText("Update");
            cancelUpdatePayment.setVisible(true);
        }else{
            if(updateUserPaymentDetails()){
                cardNoInput.setEditable(false);
                cvvInput.setEditable(false);
                cardExpiryInput.setEditable(false);
                cancelUpdatePayment.setVisible(false);
                paymentButton.setText("Edit");
                showPaymentDetails();
            }
        }
    }//GEN-LAST:event_paymentButtonMouseClicked

    private void cancelUpdatePaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelUpdatePaymentActionPerformed
        cardNoInput.setEditable(false);
        cvvInput.setEditable(false);
        cardExpiryInput.setEditable(false);
        cancelUpdatePayment.setVisible(false);
        paymentButton.setText("Edit");
    }//GEN-LAST:event_cancelUpdatePaymentActionPerformed

    private void cancelUpdateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelUpdateUserActionPerformed
        nameInput.setEditable(false);
        emailInput.setEditable(false);
        pwInput.setEditable(false);
        reenterPwLabel.setVisible(false);
        reenterPwInput.setVisible(false);
        phoneInput.setEditable(false);
        icNoInput.setEditable(false);
        addressInput.setEditable(false);
        cancelUpdateUser.setVisible(false);
        userDetailsButton.setText("Edit");
    }//GEN-LAST:event_cancelUpdateUserActionPerformed
    
    private boolean updateUserDetails(){
        ArrayList<Member> memberList = readTextFile("member");
        ArrayList<Member> updatedMemberList = new ArrayList<>();

        boolean pwValid;
        String userID = uid.getUid();
        String name = nameInput.getText();
        String email = emailInput.getText();
        String pw= pwInput.getText();
        String reenteredPw= reenterPwInput.getText();
        String phoneNo = phoneInput.getText();
        String icNo = icNoInput.getText();
        String address = addressInput.getText();
  
        if(name.isBlank()||email.isBlank()||pw.isBlank()||phoneNo.isBlank()||icNo.isBlank()||address.isBlank()){
            messageBox("Please enter all user details!");
            return false;
        }else{
            pwValid = passwordValidation(pw, reenteredPw);
        }
        if(pwValid){
            try {
                for(Member m : memberList){
                    if(userID.equals(m.getUid())){
                        updatedMemberList.add(new Member(userID, name, pw, email, icNo, phoneNo, address));
                    }else{
                        updatedMemberList.add(m);
                    }
                }
                
                updateMemberDetails(updatedMemberList);
                return true;
               
            } catch (Exception ex) {
                messageBox("Error occured! Please try again!");
                Logger.getLogger(NewUserRegister.class.getName()).log(Level.SEVERE, null, ex);
                return false;
            }
        }
        return false;
    }
    
    private boolean updateUserPaymentDetails(){
        ArrayList<MemberPayment> paymentList = readTextFile("payment");
        ArrayList<MemberPayment> updatedPaymentList = new ArrayList<>();
        
        String userID = uid.getUid();
        String cardNo = cardNoInput.getText();
        String cvvString = cvvInput.getText();
        String cardExpiry = cardExpiryInput.getText(); 

        if(cardNo.isBlank()||cvvString.isBlank()||cardExpiry.isBlank()){
            messageBox("Please enter all payment details!");
            return false;
        }else{
            YearMonth expiryDate = stringToDate(cardExpiry);
            YearMonth yearMonthNow = YearMonth.now();
            if(expiryDate.isBefore(yearMonthNow)){
                messageBox("Card expired! Please update card details!");
                return false;
            }else{
                try {
                    int cvvNo = Integer.parseInt(cvvString);

                    for(MemberPayment p : paymentList){
                        if(userID.equals(p.getUid())){
                            updatedPaymentList.add(new MemberPayment(userID, cardNo, cvvNo, expiryDate));

                        }
                        else{
                            updatedPaymentList.add(p);
                        }
                    }

                    updatePaymentDetails(updatedPaymentList);                     
                    return true;

                } catch (Exception ex) {
                    messageBox("Error occured! Please ensure all inputs are correct!");
                    Logger.getLogger(NewUserRegister.class.getName()).log(Level.SEVERE, null, ex);
                    return false;
                }
            }
        }
    }
    
     private void showUserDetails(){
        ArrayList<Member> memberList = new ArrayList<>();
        for(Member m : memberList){
            if(m.getUid().equals(uid.getUid())){
                nameInput.setText(m.getName());
                emailInput.setText(m.getEmail());
                pwInput.setText(m.getPw());
                phoneInput.setText(m.getPhoneNo());
                icNoInput.setText(m.getIcNo());
                addressInput.setText(m.getAddress());
            }
        }
    } 
    
    private void showPaymentDetails(){
        ArrayList<MemberPayment> paymentList = new ArrayList<>();
        for(MemberPayment p : paymentList){
            if(p.getUid().equals(uid.getUid())){
                cardNoInput.setText(p.getCardNo());
                cvvInput.setText(String.valueOf(p.getCvv()));
                cardExpiryInput.setText(p.getExpiryDate().format(formatter));
            }
        }
    } 
    
    private boolean passwordValidation(String password, String reenteredPw){
        String pwPattern = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#&()–[{}]:;',?/*~$^+=<>]).{8,}$";
        Pattern pattern = Pattern.compile(pwPattern);
        boolean pwValid = false;

        Matcher matcher = pattern.matcher(password);
        if(!matcher.matches()){
            pwErrorMessage.setText("<HTML>*Password must contain minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character</HTML>");
            pwErrorMessage.setForeground(Color.red);
        }else{
            if(reenteredPw.equals(password)){
                pwValid = true;
            }else if(reenteredPw.isBlank()){
                messageBox("Please re-enter password!");
            }else{
                messageBox("Password re-entered does not match!");
            }
        }
        
        return pwValid;
    }
    
    
    
    
    /**
     * @param args the command line arguments
     */
//    main(String[] args)
    public static void customerProfile(){
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerProfile(uid.getUid()).setVisible(true);
                
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea addressInput;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JButton cancelUpdatePayment;
    private javax.swing.JButton cancelUpdateUser;
    private javax.swing.JTextField cardExpiryInput;
    private javax.swing.JLabel cardExpiryLabel;
    private javax.swing.JTextField cardNoInput;
    private javax.swing.JLabel cardNoLabel;
    private javax.swing.JPanel customerDetailsPanel;
    private javax.swing.JPasswordField cvvInput;
    private javax.swing.JLabel cvvLabel;
    private javax.swing.JTextField emailInput;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField icNoInput;
    private javax.swing.JLabel icNoLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameInput;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton paymentButton;
    private javax.swing.JPanel paymentDetailsPanel;
    private javax.swing.JTextField phoneInput;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JLabel pwErrorMessage;
    private javax.swing.JPasswordField pwInput;
    private javax.swing.JLabel pwLabel;
    private javax.swing.JPasswordField reenterPwInput;
    private javax.swing.JLabel reenterPwLabel;
    private javax.swing.JLabel registerLabel;
    private javax.swing.JButton userDetailsButton;
    // End of variables declaration//GEN-END:variables
}
