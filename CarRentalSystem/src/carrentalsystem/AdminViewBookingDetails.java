/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package carrentalsystem;

import static carrentalsystem.Functions.*;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JRadioButton;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class AdminViewBookingDetails extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public AdminViewBookingDetails() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        searchInput = new javax.swing.JTextField();
        selectedSearch = new javax.swing.JComboBox<>();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayBookingInfo = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        carInfoLabel = new javax.swing.JLabel();
        editAddCarLabel = new javax.swing.JLabel();
        bookingIDDisplay = new javax.swing.JTextField();
        bookingIDLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        usernameInput = new javax.swing.JTextField();
        carIDLabel = new javax.swing.JLabel();
        carTypeInput = new javax.swing.JTextField();
        carIDInput = new javax.swing.JTextField();
        ICLabel = new javax.swing.JLabel();
        carTypeLabel = new javax.swing.JLabel();
        ICInput = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        carBrandInput = new javax.swing.JTextField();
        carBrandLabel = new javax.swing.JLabel();
        userIDLabel = new javax.swing.JLabel();
        userIDInput = new javax.swing.JTextField();
        bookingStatusLabel = new javax.swing.JLabel();
        bookingStatusInput = new javax.swing.JTextField();
        startRentLabel = new javax.swing.JLabel();
        startRentInput = new javax.swing.JTextField();
        paymentAmountLabel = new javax.swing.JLabel();
        paymentAmountInput = new javax.swing.JTextField();
        endRentLabel = new javax.swing.JLabel();
        endRentInput = new javax.swing.JTextField();
        paymentStatusLabel = new javax.swing.JLabel();
        paymentStatusInput = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(811, 629));

        selectedSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Booking ID", "Customer IC", "Car ID", "Car Brand", "Booking Status", "Payment Status", "Start Rent Date (yyyy/mm/dd)", "End Rent Date (yyyy/mm/dd)" }));

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        displayBookingInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "BID", "UID", "Name", "Car ID", "Start Rent", "End Rent", "Status", "Amount", "Payment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        displayBookingInfo.setToolTipText("");
        displayBookingInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayBookingInfoMouseClicked(evt);
            }
        });
        displayBookingInfo.getColumnModel().getColumn(0).setPreferredWidth(45);
        displayBookingInfo.getColumnModel().getColumn(1).setPreferredWidth(45);
        displayBookingInfo.getColumnModel().getColumn(3).setPreferredWidth(45);
        displayBookingInfo.getColumnModel().getColumn(2).setPreferredWidth(100);
        displayBookingInfo.getColumnModel().getColumn(4).setPreferredWidth(100);
        displayBookingInfo.getColumnModel().getColumn(5).setPreferredWidth(100);
        jScrollPane1.setViewportView(displayBookingInfo);

        carInfoLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        carInfoLabel.setText("Booking Info");

        editAddCarLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        editAddCarLabel.setText("Update Booking Details");

        bookingIDDisplay.setEditable(false);

        bookingIDLabel.setText("Booking ID:");

        usernameLabel.setText("Name:");

        carIDLabel.setText("Car ID:");

        ICLabel.setText("IC:");

        carTypeLabel.setText("Car Type:");

        updateButton.setText("Update");
        updateButton.setActionCommand("");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        carBrandLabel.setText("Car Brand:");

        userIDLabel.setText("User ID:");

        bookingStatusLabel.setText("Booking Status:");

        startRentLabel.setText("Start Rent Date:");

        paymentAmountLabel.setText("Payment Amount:");

        endRentLabel.setText("End Rent Date:");

        paymentStatusLabel.setText("Payment Status:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(carInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(updateButton)
                            .addGap(65, 65, 65))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(27, 27, 27)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectedSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchInput, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(carIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(carTypeLabel)
                            .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(startRentLabel)
                                    .addGap(18, 18, 18)
                                    .addComponent(startRentInput, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(paymentAmountLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(paymentAmountInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bookingIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(usernameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(bookingIDDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(carIDInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(carTypeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(userIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(userIDInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(carBrandLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(carBrandInput, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(paymentStatusLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(paymentStatusInput, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(endRentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(endRentInput, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bookingStatusLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bookingStatusInput, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ICLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ICInput, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(editAddCarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(carInfoLabel)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectedSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editAddCarLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookingIDDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookingIDLabel)
                    .addComponent(userIDLabel)
                    .addComponent(userIDInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel)
                    .addComponent(usernameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ICLabel)
                    .addComponent(ICInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(carIDLabel)
                    .addComponent(carBrandInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(carBrandLabel)
                    .addComponent(carIDInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(carTypeLabel)
                    .addComponent(carTypeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookingStatusLabel)
                    .addComponent(bookingStatusInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startRentLabel)
                    .addComponent(startRentInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endRentLabel)
                    .addComponent(endRentInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paymentAmountInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paymentAmountLabel)
                    .addComponent(paymentStatusLabel)
                    .addComponent(paymentStatusInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateButton)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String input = selectedSearch.getSelectedItem().toString();
        String searchText = searchInput.getText();
        ArrayList<Bookings> bookingDetails = showBookingInfo(input, searchText);
        DisplayRoomAvailableTable(bookingDetails); 
    }//GEN-LAST:event_searchButtonActionPerformed

    private void displayBookingInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayBookingInfoMouseClicked
        if(evt.getClickCount()>=2){
            int row = displayBookingInfo.getSelectedRow();
            String bookingID = displayBookingInfo.getModel().getValueAt(row, 0).toString();
            
    
        }
    }//GEN-LAST:event_displayBookingInfoMouseClicked
    
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        
    }//GEN-LAST:event_updateButtonActionPerformed
    
    private ArrayList showBookingInfo(String input, String searchText){
        ArrayList<Bookings> bookingList = readTextFile("booking");
        ArrayList<Member> memberList = readTextFile("member");
        ArrayList<Car> carList = readTextFile("car");
        ArrayList <Bookings> bookingDetails = new ArrayList<>();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm");

        try {
            switch (input) {
                case "Booking ID":
                    for(Bookings b : bookingList) {
                        if (searchText.equalsIgnoreCase(b.getBookingID())) {
                            bookingDetails.add(b);
                        }
                    }
                    return bookingDetails;    
                
                    
                case "Customer IC":
                    for(Member m : memberList) {
                        if(Long.parseLong(searchText)==m.getIcNo()){
                            for(Bookings b : bookingList){                               
                                if (m.getUid().equals(b.getMember().getUid())) {
                                    bookingDetails.add(b);
                                }   
                            }
                        }   
                    }
                    return bookingDetails;

                case "Car ID":
                    for (Bookings b : bookingList) {    
                        if (searchText.equalsIgnoreCase(b.getCar().getCarID())) {
                            bookingDetails.add(b);
                        }
                    }
                    return bookingDetails;
                    
                    
                case "Car Brand":
                    for(Car c : carList){
                        if(searchText.equalsIgnoreCase(c.getBrand())){
                           for (Bookings b : bookingList) {    
                                if (c.getCarID().equals(b.getCar().getCarID())) {
                                    bookingDetails.add(b);
                                }
                            } 
                        }
                    }
                    return bookingDetails;

                case "Start Rent Date (yyyy/mm/dd)": 
                    String startDate = searchText + " 00:00";
                    LocalDateTime startRentDate = LocalDateTime.parse(startDate, formatter);
                    LocalDateTime startRentDateRange = startRentDate.plusDays(1);

                    for (Bookings b : bookingList) {
                        if  (b.getStartDate().isAfter(startRentDate) && b.getStartDate().isBefore(startRentDateRange)) {
                            bookingDetails.add(b);
                        }
                    }
                    return bookingDetails;

                case "End Rent Date (yyyy/mm/dd)":
                    String endDate = searchText + " 00:00";
                    LocalDateTime endRentDate = LocalDateTime.parse(endDate, formatter);
                    LocalDateTime endRentDateRange = endRentDate.plusDays(1);

                    for (Bookings b : bookingList) {
                        if  (b.getEndDate().isAfter(endRentDate) && b.getEndDate().isBefore(endRentDateRange)) {
                            bookingDetails.add(b);
                        }
                    }
                    return bookingDetails;
                    
                case "Booking Status":
                    for (Bookings b : bookingList) {
                        if (searchText.equalsIgnoreCase(b.getBookingStatus())) {
                            bookingDetails.add(b);
                        }
                    }
                    return bookingDetails;
                    
                case "Payment Status":
                    for (Bookings b : bookingList) {
                        if (searchText.equalsIgnoreCase(b.getPaymentStatus())) {
                            bookingDetails.add(b);
                        }
                    }
                    return bookingDetails;
            }

        } catch (IllegalArgumentException e) {
            messageBox("Details not found! Please try again!");
            Logger.getLogger(AdminViewCarDetails.class.getName()).log(Level.SEVERE, null, e);
            
        }
        return null;
    }
    
    private void DisplayRoomAvailableTable(ArrayList<Bookings> bookingList) { 
        ArrayList<Member> memberList = readTextFile("member");
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm");
        String username = null;
        
        try {
            DefaultTableModel tableModel = (DefaultTableModel)displayBookingInfo.getModel();
            tableModel.setRowCount(0);

            //get and set data to table
            if(!bookingList.isEmpty()){
                for(Bookings b : bookingList){
                    String bookID = b.getBookingID();
                    String UID = b.getMember().getUid();                   
                    String carID = b.getCar().getCarID();
                    String startRent = b.getStartDate().format(formatter);
                    String endRent = b.getEndDate().format(formatter);
                    String bookingStatus = b.getBookingStatus();
                    Double payAmount = b.getPaymentAmount();
                    String paymentStatus = b.getPaymentStatus();
                    
                    for(Member m : memberList){
                        if(b.getMember().getUid().equalsIgnoreCase(m.getUid())){
                            username = m.getName();
                        }
                    }
                    
                    
                    Object[] data = {bookID, UID, username, carID, startRent, endRent, bookingStatus, payAmount, paymentStatus};
                    tableModel.addRow(data);
                }
            }
            else{
                String[] noRecord = {"No records."};
                tableModel.addRow(noRecord);
            }
            
        } catch (Exception e) {
            messageBox("Details not found! Please try again!");
            Logger.getLogger(AdminViewCarDetails.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminViewBookingDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminViewBookingDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminViewBookingDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminViewBookingDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminViewBookingDetails().setVisible(true);
                
            }
            
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ICInput;
    private javax.swing.JLabel ICLabel;
    private javax.swing.JTextField bookingIDDisplay;
    private javax.swing.JLabel bookingIDLabel;
    private javax.swing.JTextField bookingStatusInput;
    private javax.swing.JLabel bookingStatusLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField carBrandInput;
    private javax.swing.JLabel carBrandLabel;
    private javax.swing.JTextField carIDInput;
    private javax.swing.JLabel carIDLabel;
    private javax.swing.JLabel carInfoLabel;
    private javax.swing.JTextField carTypeInput;
    private javax.swing.JLabel carTypeLabel;
    private javax.swing.JTable displayBookingInfo;
    private javax.swing.JLabel editAddCarLabel;
    private javax.swing.JTextField endRentInput;
    private javax.swing.JLabel endRentLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField paymentAmountInput;
    private javax.swing.JLabel paymentAmountLabel;
    private javax.swing.JTextField paymentStatusInput;
    private javax.swing.JLabel paymentStatusLabel;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchInput;
    private javax.swing.JComboBox<String> selectedSearch;
    private javax.swing.JTextField startRentInput;
    private javax.swing.JLabel startRentLabel;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField userIDInput;
    private javax.swing.JLabel userIDLabel;
    private javax.swing.JTextField usernameInput;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
