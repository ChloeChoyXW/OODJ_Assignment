/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package carrentalsystem;

import static carrentalsystem.Functions.*;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class CustomerViewBooking extends javax.swing.JFrame {
    private String uid;
    /**
     * Creates new form NewJFrame
     */
    public CustomerViewBooking(String uid) {
        initComponents();
        this.uid = uid;

        ArrayList<Booking> bookingList = showBookingInfo("","");
        DisplayBookings(bookingList);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        searchInput = new javax.swing.JTextField();
        selectedSearch = new javax.swing.JComboBox<>();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayBookingInfo = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        carInfoLabel = new javax.swing.JLabel();
        cancelBookingButton = new javax.swing.JButton();
        carDetailsPanel = new javax.swing.JPanel();
        carBrandLabel = new javax.swing.JLabel();
        carPlateLabel = new javax.swing.JLabel();
        carPlateDisplay = new javax.swing.JTextField();
        carIDLabel = new javax.swing.JLabel();
        carTypeDisplay = new javax.swing.JTextField();
        carIDDisplay = new javax.swing.JTextField();
        carTypeLabel = new javax.swing.JLabel();
        carBrandDisplay = new javax.swing.JTextField();
        seatNoLabel = new javax.swing.JLabel();
        seatNoDisplay = new javax.swing.JTextField();
        bookingDetailsPanel = new javax.swing.JPanel();
        bookingStatusDisplay = new javax.swing.JTextField();
        bookingStatusLabel = new javax.swing.JLabel();
        bookingIDDisplay = new javax.swing.JTextField();
        bookingIDLabel = new javax.swing.JLabel();
        startRentLabel = new javax.swing.JLabel();
        startRentDisplay = new javax.swing.JTextField();
        paymentAmountLabel = new javax.swing.JLabel();
        paymentAmountDisplay = new javax.swing.JTextField();
        endRentLabel = new javax.swing.JLabel();
        endRentDisplay = new javax.swing.JTextField();
        paymentStatusLabel = new javax.swing.JLabel();
        paymentStatusDisplay = new javax.swing.JTextField();
        makePaymentButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        profileMenu = new javax.swing.JMenu();
        viewBookingMenu = new javax.swing.JMenu();
        addBookingMenu = new javax.swing.JMenu();
        logoutMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(811, 629));
        setResizable(false);
        setSize(new java.awt.Dimension(1112, 670));

        selectedSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Booking ID", "Start Rent Date (yyyy/mm/dd)", "End Rent Date (yyyy/mm/dd)", "Unconfirmed Bookings", "Confirmed Bookings", "Declined Bookings", "Paid Bookings", "Unpaid Bookings" }));

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        displayBookingInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "BID", "Car Brand", "Car Type", "Car Plate", "Start Rent", "End Rent", "Status", "Amount", "Payment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        displayBookingInfo.setToolTipText("");
        displayBookingInfo.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        displayBookingInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayBookingInfoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(displayBookingInfo);

        carInfoLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        carInfoLabel.setText("Booking Info");

        cancelBookingButton.setText("Cancel Booking");
        cancelBookingButton.setActionCommand("");
        cancelBookingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBookingButtonActionPerformed(evt);
            }
        });

        carDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "Car Rented", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 12)))); // NOI18N

        carBrandLabel.setText("Car Brand:");

        carPlateLabel.setText("Car Plate:");

        carPlateDisplay.setEditable(false);

        carIDLabel.setText("Car ID:");

        carTypeDisplay.setEditable(false);

        carIDDisplay.setEditable(false);

        carTypeLabel.setText("Car Type:");

        carBrandDisplay.setEditable(false);

        seatNoLabel.setText("Seat No:");

        seatNoDisplay.setEditable(false);

        javax.swing.GroupLayout carDetailsPanelLayout = new javax.swing.GroupLayout(carDetailsPanel);
        carDetailsPanel.setLayout(carDetailsPanelLayout);
        carDetailsPanelLayout.setHorizontalGroup(
            carDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(carDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(carDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(carPlateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(carIDLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(carBrandLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(carDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(carDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(carBrandDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                        .addComponent(carIDDisplay))
                    .addComponent(carPlateDisplay, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(carDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(carDetailsPanelLayout.createSequentialGroup()
                        .addComponent(carTypeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(carTypeDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(carDetailsPanelLayout.createSequentialGroup()
                        .addComponent(seatNoLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(seatNoDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        carDetailsPanelLayout.setVerticalGroup(
            carDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, carDetailsPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(carDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(carIDLabel)
                    .addComponent(carIDDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(carDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(carBrandLabel)
                    .addComponent(carTypeLabel)
                    .addComponent(carBrandDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(carTypeDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(carDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(carPlateLabel)
                    .addComponent(seatNoLabel)
                    .addComponent(seatNoDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(carPlateDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        bookingDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Booking ID & Status", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 12))); // NOI18N
        bookingDetailsPanel.setName(""); // NOI18N

        bookingStatusDisplay.setEditable(false);

        bookingStatusLabel.setText("Booking Status:");

        bookingIDDisplay.setEditable(false);

        bookingIDLabel.setText("Booking ID:");

        startRentLabel.setText("Start Rent Date:");

        startRentDisplay.setEditable(false);

        paymentAmountLabel.setText("Payment Amount:");

        paymentAmountDisplay.setEditable(false);

        endRentLabel.setText("End Rent Date:");

        endRentDisplay.setEditable(false);

        paymentStatusLabel.setText("Payment Status:");

        paymentStatusDisplay.setEditable(false);

        javax.swing.GroupLayout bookingDetailsPanelLayout = new javax.swing.GroupLayout(bookingDetailsPanel);
        bookingDetailsPanel.setLayout(bookingDetailsPanelLayout);
        bookingDetailsPanelLayout.setHorizontalGroup(
            bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingDetailsPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bookingDetailsPanelLayout.createSequentialGroup()
                        .addComponent(paymentAmountLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(paymentAmountDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                    .addGroup(bookingDetailsPanelLayout.createSequentialGroup()
                        .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bookingIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(bookingDetailsPanelLayout.createSequentialGroup()
                                .addComponent(startRentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(startRentDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(bookingIDDisplay))))
                .addGap(55, 55, 55)
                .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(endRentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bookingStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                    .addComponent(paymentStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bookingStatusDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endRentDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paymentStatusDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );
        bookingDetailsPanelLayout.setVerticalGroup(
            bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookingDetailsPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bookingDetailsPanelLayout.createSequentialGroup()
                        .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bookingStatusLabel)
                            .addComponent(bookingStatusDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(endRentLabel)
                            .addComponent(endRentDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(paymentStatusLabel)
                            .addComponent(paymentStatusDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(bookingDetailsPanelLayout.createSequentialGroup()
                        .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bookingIDLabel)
                            .addComponent(bookingIDDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(startRentDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(startRentLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(paymentAmountLabel)
                            .addComponent(paymentAmountDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(17, 17, 17))
        );

        makePaymentButton.setText("Make Payment");
        makePaymentButton.setVisible(false);
        makePaymentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makePaymentButtonActionPerformed(evt);
            }
        });

        profileMenu.setText("Profile");
        profileMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profileMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(profileMenu);

        viewBookingMenu.setText("View Bookings");
        viewBookingMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewBookingMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(viewBookingMenu);

        addBookingMenu.setText("Add Bookings");
        addBookingMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBookingMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(addBookingMenu);

        logoutMenu.setText("Logout");
        logoutMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(logoutMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(carDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(carInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bookingDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(191, 191, 191)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cancelBookingButton)
                                    .addComponent(makePaymentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(selectedSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(searchInput, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(searchButton))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1015, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1053, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(carInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectedSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(bookingDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(carDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(cancelBookingButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(makePaymentButton)))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        bookingDetailsPanel.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
//BY DEFAULT PLS SHOW ALL BOOKINGS ALSO AUTO GET CUSTOMER ID ALSO DO MAKE PAYMENT
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String input = selectedSearch.getSelectedItem().toString();
        String searchText = searchInput.getText();
        try{
            ArrayList<Booking> bookingDetails = showBookingInfo(input, searchText);
            DisplayBookings(bookingDetails); 
            if(input.equalsIgnoreCase("Unpaid Bookings")){
                makePaymentButton.setVisible(true);
            }
        }catch(Exception  e){
            messageBox("Error occured! Please check input.");
        }
        
        searchInput.setText(null);
        
        carIDDisplay.setText(null);
        carBrandDisplay.setText(null);
        carTypeDisplay.setText(null);
        carPlateDisplay.setText(null);
        seatNoDisplay.setText(null);
        
        bookingIDDisplay.setText(null);
        bookingStatusDisplay.setText(null);
        startRentDisplay.setText(null);
        endRentDisplay.setText(null);
        paymentAmountDisplay.setText(null);
        paymentStatusDisplay.setText(null);

    }//GEN-LAST:event_searchButtonActionPerformed

    private void displayBookingInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayBookingInfoMouseClicked
        if(evt.getClickCount()>=2){
            int row = displayBookingInfo.getSelectedRow();
            setBookingDetails(row);
        }
    }//GEN-LAST:event_displayBookingInfoMouseClicked
    
    private void cancelBookingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBookingButtonActionPerformed
        ArrayList<Booking> bookingList = readTextFile("booking");
        ArrayList<Booking> updatedBookingList = new ArrayList<>();
        String id = bookingIDDisplay.getText();

        for(Booking i : bookingList){
           if(!i.getBookingID().equals(id)){
                updatedBookingList.add(i);     
            } 
        }
        
        try { 
            updateBookingDetails(updatedBookingList);
        } catch (IOException ex) {
            messageBox("Error occured! Please try again!");
            Logger.getLogger(CustomerViewBooking.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cancelBookingButtonActionPerformed

    private void viewBookingMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewBookingMenuMouseClicked
        CustomerViewBooking.customerViewBooking(this.uid);
        this.dispose();
    }//GEN-LAST:event_viewBookingMenuMouseClicked

    private void addBookingMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBookingMenuMouseClicked
        CustomerAddBooking.customerAddBooking(this.uid);
        this.dispose();
    }//GEN-LAST:event_addBookingMenuMouseClicked

    private void profileMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileMenuMouseClicked
        CustomerProfile.customerProfile(this.uid);
        this.dispose();
    }//GEN-LAST:event_profileMenuMouseClicked

    private void logoutMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMenuMouseClicked
        CustomerAddBooking.main(null);
        this.dispose();
    }//GEN-LAST:event_logoutMenuMouseClicked

    private void makePaymentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makePaymentButtonActionPerformed
        PaymentDialog.paymentMessage(bookingIDDisplay.getText(), this.uid);
    }//GEN-LAST:event_makePaymentButtonActionPerformed
    
    //show booking details after clicked from table
    private void setBookingDetails(int row){
        ArrayList<Booking> bookingList = readTextFile("booking");
        ArrayList<Car> carList = readTextFile("car");  
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm");
        String carID = null;
      
        String bookingID = displayBookingInfo.getModel().getValueAt(row, 0).toString();

        for(Booking b : bookingList){
            if(bookingID.equals(b.getBookingID())){
                carID = b.getCar().getCarID();
                bookingIDDisplay.setText(b.getBookingID());
                bookingStatusDisplay.setText(b.getBookingStatus());
                startRentDisplay.setText(b.getStartDate().format(formatter));
                endRentDisplay.setText(b.getEndDate().format(formatter));
                paymentAmountDisplay.setText(String.valueOf(b.getPaymentAmount()));
                paymentStatusDisplay.setText(b.getPaymentStatus());
                
                if(b.getPaymentStatus().equalsIgnoreCase("Unpaid")){
                    makePaymentButton.setVisible(true);
                }
            }
        }
        

        
        for(Car c : carList){
            if(carID.equals(c.getCarID())){
                carIDDisplay.setText(c.getCarID());
                carBrandDisplay.setText(c.getBrand());
                carTypeDisplay.setText(c.getCarType());
                carPlateDisplay.setText(c.getCarPlate());
                seatNoDisplay.setText(String.valueOf(c.getSeatNum()));
            }
        }
    }
    
    //filter with input
    private ArrayList showBookingInfo(String input, String searchText){
        ArrayList<Booking> bookingList = readTextFile("booking");
        ArrayList<Member> memberList = readTextFile("member");
        ArrayList<Car> carList = readTextFile("car");
        ArrayList <Booking> bookingDetails = new ArrayList<>();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm");

        try {
            switch (input) {
                case "":
                    for(Booking b: bookingList){
                        if(this.uid.equals(b.getMember().getUid())){
                            bookingDetails.add(b);
                        }
                    }
                    return bookingDetails;
                    
                case "Booking ID":
                    for(Booking b : bookingList) {
                        if (searchText.equalsIgnoreCase(b.getBookingID()) && this.uid.equals(b.getMember().getUid())) {
                            bookingDetails.add(b);
                        }
                    }
                    return bookingDetails;    
                

                case "Start Rent Date (yyyy/mm/dd)": 
                    String startDate = searchText + " 00:00";
                    LocalDateTime startRentDate = LocalDateTime.parse(startDate, formatter);
                    LocalDateTime startRentDateRange = startRentDate.plusDays(1);

                    for (Booking b : bookingList) {
                        if  (b.getStartDate().isAfter(startRentDate) && b.getStartDate().isBefore(startRentDateRange) && this.uid.equals(b.getMember().getUid())) {
                            bookingDetails.add(b);
                        }
                    }
                    return bookingDetails;

                case "End Rent Date (yyyy/mm/dd)":
                    String endDate = searchText + " 00:00";
                    LocalDateTime endRentDate = LocalDateTime.parse(endDate, formatter);
                    LocalDateTime endRentDateRange = endRentDate.plusDays(1);

                    for (Booking b : bookingList) {
                        if  (b.getEndDate().isAfter(endRentDate) && b.getEndDate().isBefore(endRentDateRange) && this.uid.equals(b.getMember().getUid())) {
                            bookingDetails.add(b);
                        }
                    }
                    return bookingDetails;

                case "Confirmed Bookings":
                    for (Booking b : bookingList) {
                        if (b.getBookingStatus().equalsIgnoreCase("Confirmed") && this.uid.equals(b.getMember().getUid())) {
                            bookingDetails.add(b);
                        }
                    }
                    return bookingDetails;
                    
                case "Declined Bookings":
                    for (Booking b : bookingList) {
                        if (b.getBookingStatus().equalsIgnoreCase("Declined") && this.uid.equals(b.getMember().getUid())) {
                            bookingDetails.add(b);
                        }
                    }
                    return bookingDetails;
                    
                case "Unconfirmed Bookings":
                    for (Booking b : bookingList) {
                        if (b.getBookingStatus().equalsIgnoreCase("Unconfirmed") && this.uid.equals(b.getMember().getUid())) {
                            bookingDetails.add(b);
                        }
                    }
                    return bookingDetails;
                    
                case "Paid Bookings":
                    for (Booking b : bookingList) {
                        if (b.getPaymentStatus().equalsIgnoreCase("Paid") && this.uid.equals(b.getMember().getUid())) {
                            bookingDetails.add(b);
                        }
                    }
                    return bookingDetails;
                    
                case "Unpaid Bookings":
                    for (Booking b : bookingList) {
                        if (b.getPaymentStatus().equalsIgnoreCase("Unpaid") && this.uid.equals(b.getMember().getUid())) {
                            bookingDetails.add(b);
                        }
                    }
                    return bookingDetails;
            }

        } catch (IllegalArgumentException e) {
            messageBox("Details not found! Please try again!");
            Logger.getLogger(AdminViewCarDetails.class.getName()).log(Level.SEVERE, null, e);
            System.out.println(e);
            
        }
        return null;
    }
    // show data in table
    private void DisplayBookings(ArrayList<Booking> bookingList) { 
        ArrayList<Car> carList = readTextFile("car");
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm");
        String carBrand = null;
        String carType = null;
        String carPlate = null;
        
        try {
            DefaultTableModel tableModel = (DefaultTableModel)displayBookingInfo.getModel();
            tableModel.setRowCount(0);

            //get and set data to table
            if(!bookingList.isEmpty()){
                for(Booking b : bookingList){
                    String bookID = b.getBookingID();                
                    String startRent = b.getStartDate().format(formatter);
                    String endRent = b.getEndDate().format(formatter);
                    String bookingStatus = b.getBookingStatus();
                    Double payAmount = b.getPaymentAmount();
                    String paymentStatus = b.getPaymentStatus();
                    
                    for(Car c : carList){
                        if(c.getCarID().equalsIgnoreCase(b.getCar().getCarID())){
                            carBrand = c.getBrand();
                            carType = c.getCarType();
                            carPlate = c.getCarPlate();
                        }
                    }
                    
                    
                    Object[] data = {bookID, carBrand, carType, carPlate, startRent, endRent, bookingStatus, payAmount, paymentStatus};
                    tableModel.addRow(data);
                }
                
                
            }
            else{
                String[] noRecord = {"No records."};
                tableModel.addRow(noRecord);
            }
            
        } catch (Exception e) {
            messageBox("Details not found! Please try again!");
            Logger.getLogger(AdminViewCarDetails.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void customerViewBooking(String uid) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerViewBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerViewBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerViewBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerViewBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>


        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerViewBooking(uid).setVisible(true);
                
            }
            
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu addBookingMenu;
    private javax.swing.JPanel bookingDetailsPanel;
    private javax.swing.JTextField bookingIDDisplay;
    private javax.swing.JLabel bookingIDLabel;
    private javax.swing.JTextField bookingStatusDisplay;
    private javax.swing.JLabel bookingStatusLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelBookingButton;
    private javax.swing.JTextField carBrandDisplay;
    private javax.swing.JLabel carBrandLabel;
    private javax.swing.JPanel carDetailsPanel;
    private javax.swing.JTextField carIDDisplay;
    private javax.swing.JLabel carIDLabel;
    private javax.swing.JLabel carInfoLabel;
    private javax.swing.JTextField carPlateDisplay;
    private javax.swing.JLabel carPlateLabel;
    private javax.swing.JTextField carTypeDisplay;
    private javax.swing.JLabel carTypeLabel;
    private javax.swing.JTable displayBookingInfo;
    private javax.swing.JTextField endRentDisplay;
    private javax.swing.JLabel endRentLabel;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenu logoutMenu;
    private javax.swing.JButton makePaymentButton;
    private javax.swing.JTextField paymentAmountDisplay;
    private javax.swing.JLabel paymentAmountLabel;
    private javax.swing.JTextField paymentStatusDisplay;
    private javax.swing.JLabel paymentStatusLabel;
    private javax.swing.JMenu profileMenu;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchInput;
    private javax.swing.JTextField seatNoDisplay;
    private javax.swing.JLabel seatNoLabel;
    private javax.swing.JComboBox<String> selectedSearch;
    private javax.swing.JTextField startRentDisplay;
    private javax.swing.JLabel startRentLabel;
    private javax.swing.JMenu viewBookingMenu;
    // End of variables declaration//GEN-END:variables
}
